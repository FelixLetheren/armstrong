$default-height: 25px;
$default-width: 50px;

$default-padding: 2px;

$default-hover-nudge-amount: 5px;

$default-inactive-colour: $gray-light;
$default-hover-colour: darken($gray-light, 5%);
$default-active-colour: $color-positive;

$transition-time: 0.3s;

@mixin nubbin-and-icon {

    ~.icon,
    &::after {
        @content;
    }
}


@mixin resize-switch($switch-width, $switch-height, $switch-padding, $switch-hover-nudge-amount) {
    $nubbin-size: calc(#{$switch-height} - #{$switch-padding} * 2);
    $checked-transform: calc(#{$switch-width} - #{$nubbin-size} - #{$switch-padding} * 2);

    >input {
        width: $switch-width;
        height: $switch-height;
        border-radius: calc(#{$switch-height} / 2);

        &::after {
            width: $nubbin-size;
            height: $nubbin-size;

            left: $switch-padding;
            top: $switch-padding;
        }

        &:checked {

            @include nubbin-and-icon {
                transform: translateX($checked-transform)
            }
        }

        &:hover[data-hover-nudge-enabled="true"][data-has-clicked="false"] {

            @include nubbin-and-icon {
                transform: translateX($switch-hover-nudge-amount);
            }

            &:checked {

                @include nubbin-and-icon {
                    transform: translateX(calc(#{$checked-transform} - #{$switch-hover-nudge-amount}));
                }
            }
        }
    }

    .icon {
        font-size: calc(#{$nubbin-size} * 0.5);

        top: $switch-padding;
        bottom: $switch-padding;

        width: $nubbin-size;
        left: $switch-padding;
    }
}

@mixin recolour-switch($switch-inactive-colour, $switch-hover-colour, $switch-active-colour) {
    >input {
        background-color: $switch-inactive-colour;

        &:checked {
            background-color: $switch-active-colour;
        }

        &:hover[data-has-clicked="false"] {
            &:not(:checked) {
                background-color: $switch-hover-colour;
            }
        }
    }

    .icon.active-icon {
        color: $switch-active-colour;
    }

    .icon.inactive-icon {
        color: $switch-inactive-colour;
    }
}

// Only renders a switch if the browser supports css variables

@supports (color: var(--a)) {
    .armstrong-input.switch-input {
        @include resize-switch(var(--armstrong-switch-width, #{$default-width}), var(--armstrong-switch-height, #{$default-height}), var(--armstrong-switch-padding, #{$default-padding}), var(--armstrong-switch-hover-nudge-amount, #{$default-hover-nudge-amount}));
        @include recolour-switch(var(--armstrong-switch-inactive-colour, #{$default-inactive-colour}), var(--armstrong-switch-hover-colour, #{$default-hover-colour}), var(--armstrong-switch-active-colour, #{$default-active-colour}));

        position: relative;

        display: inline-block;

        >input {
            position: relative;

            transition: background-color $transition-time, opacity $transition-time;
            cursor: pointer;

            border: none;

            &:focus {
                border: none;
            }

            &::after {
                content: '';
                display: block;
                position: absolute;

                background-color: white;
                border-radius: 50%;
                box-shadow: 0 0 12px rgba(black, 0.3);

                transition: transform $transition-time;
            }

            &[data-disabled="true"] {
                opacity: 0.5;
                pointer-events: none;
            }

            &:checked {
                ~.icon.active-icon {
                    opacity: 1;
                    transition: opacity $transition-time / 2 $transition-time / 2, transform $transition-time;
                }
            }

            &:not(:checked) {
                ~.icon.inactive-icon {
                    opacity: 1;
                    transition: opacity $transition-time / 2 $transition-time / 2, transform $transition-time;
                }
            }
        }

        >.icon {
            position: absolute;

            display: flex;
            align-items: center;
            justify-content: center;

            pointer-events: none;

            opacity: 0;
            transition: opacity $transition-time / 2, transform $transition-time;
        }
    }
}

// renders a normal switch if not

@supports not (color: var(--a)) {
    .armstrong-input.switch-input {
        >.icon {
            display: none;
        }
    }
}